openapi: 3.0.0
paths:
  /lists:
    get:
      tags:
      - Lists
      summary: Get CDB lists info
      description: Return the contents of all CDB lists. Optionally, the result can
        be filtered by several criteria. See available parameters for more details
      operationId: api.controllers.cdb_list_controller.get_lists
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/lists:read'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/select'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/get_dirnames_path'
      - $ref: '#/components/parameters/filename'
      - $ref: '#/components/parameters/query'
      - $ref: '#/components/parameters/distinct'
      responses:
        '200':
          description: Successfully got all CDB lists and the files where they are
            defined
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseLists'
              example:
                data:
                  affected_items:
                  - items:
                    - key: audit-wazuh-w
                      value: write
                    - key: audit-wazuh-r
                      value: read
                    - key: audit-wazuh-a
                      value: attribute
                    - key: audit-wazuh-x
                      value: execute
                    - key: audit-wazuh-c
                      value: command
                    relative_dirname: etc/lists
                    filename: audit-keys
                  total_affected_items: 4
                  total_failed_items: 0
                  failed_items: []
                message: All specified lists were returned
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /lists/files/{filename}:
    get:
      tags:
      - Lists
      summary: Get CDB list file content
      description: Return the content of a CDB list file. Only the filename can be
        specified. It will be searched recursively if not found
      operationId: api.controllers.cdb_list_controller.get_file
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/lists:read'
      parameters:
      - $ref: '#/components/parameters/list_filename_path'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/raw'
      responses:
        '200':
          description: Successfully got CDB list
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseListsFiles'
              example:
                data:
                  affected_items:
                  - audit-wazuh-w: write
                    audit-wazuh-r: read
                    audit-wazuh-a: attribute
                    audit-wazuh-x: execute
                    audit-wazuh-c: command
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: CDB list was returned
                error: 0
            text/plain:
              schema:
                type: string
              example: 'audit-wazuh-w:write

                audit-wazuh-r:read

                audit-wazuh-a:attribute

                audit-wazuh-x:execute

                audit-wazuh-c:command

                '
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    put:
      tags:
      - Lists
      summary: Update CDB list file
      description: Replace or upload a CDB list file with the data contained in the
        API request
      operationId: api.controllers.cdb_list_controller.put_file
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/lists:update'
      - $ref: '#/x-rbac-catalog/actions/lists:delete'
      parameters:
      - $ref: '#/components/parameters/list_filename_path'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/overwrite'
      requestBody:
        description: Content of the file to be uploaded
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Confirmation message
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - $ref: '#/components/schemas/ConfirmationMessage'
              example:
                data:
                  affected_items:
                  - etc/lists/audit-keys
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: CDB list file uploaded successfully
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    delete:
      tags:
      - Lists
      summary: Delete CDB list file
      description: Delete a specified CDB list file. Only the filename can be specified.
        It will be searched recursively if not found
      operationId: api.controllers.cdb_list_controller.delete_file
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/lists:delete'
      parameters:
      - $ref: '#/components/parameters/list_filename_path'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: Confirmation message
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - $ref: '#/components/schemas/ConfirmationMessage'
              example:
                data:
                  affected_items:
                  - etc/lists/test
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: CDB list file was successfully deleted
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /lists/files:
    get:
      tags:
      - Lists
      summary: Get CDB lists files
      description: Return the path from all CDB lists. Use this method to know all
        the CDB lists and their location in the filesystem relative to Wazuh installation
        folder
      operationId: api.controllers.cdb_list_controller.get_lists_files
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/lists:read'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/get_dirnames_path'
      - $ref: '#/components/parameters/filename'
      responses:
        '200':
          description: Successfully got CDB lists
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseListsFiles'
              example:
                data:
                  affected_items:
                  - relative_dirname: etc/lists/amazon
                    filename: aws-eventnames
                  - relative_dirname: etc/lists/amazon
                    filename: aws-sources
                  - relative_dirname: etc/lists
                    filename: audit-keys
                  - relative_dirname: etc/lists
                    filename: security-eventchannel
                  total_affected_items: 4
                  total_failed_items: 0
                  failed_items: []
                message: All specified paths were returned
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
components:
  schemas:
    ApiResponse:
      type: object
      properties:
        message:
          type: string
          description: Human readable description to explain the result of the request
    AllItemsResponseLists:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - type: object
        required:
        - affected_items
        properties:
          affected_items:
            type: array
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/CDBList'
    AllItemsResponseListsFiles:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - type: object
        required:
        - affected_items
        properties:
          affected_items:
            type: array
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/CDBListFile'
    ConfirmationMessage:
      type: object
      properties:
        message:
          type: string
          description: Confirmation message
  responses:
    ResponseError:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Bad Request
            detail: '''{invalid_param}'' is not a ''{expected_type}''. Failed validating
              ''format'' in schema[''items'']: {''description'': ''{parameter_name}'',
              ''format'': ''{expected_format}'', ''minLength'': {expected_length},
              ''type'': ''{expected_type}'', ''x-scope'': ['''', ''#/components/parameters/{parameter_name}'']}'
    PermissionDeniedResponse:
      description: Response to report a permission denied request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            title: Permission Denied
            detail: 'Permission denied: Resource type: *:*'
            remediation: Please, make sure you have permissions to execute the current
              request. For more information on how to set up permissions, please visit
              https://documentation.wazuh.com/4.9/user-manual/api/rbac/configuration.html
            error: 4000
            dapi_errors:
              unknown-node:
                error: 'Permission denied: Resource type: *:*'
    UnauthorizedResponse:
      description: Response to report an unauthorized request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Unauthorized
            detail: No authorization token provided
    InvalidHTTPMethodResponse:
      description: Response to report an invalid HTTP method
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Method Not Allowed
            detail: Specified method is invalid for this resource
    RequestTooLargeResponse:
      description: Maximum request body size exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Request Entity Too Large
            detail: Maximum request body size 1048576 exceeded, actual body size 1225245
    TooManyRequestsResponse:
      description: Maximum number of request per minute reached
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Wazuh Error
            detail: Maximum number of requests per minute reached
            remediation: 'This limit can be changed in api.yaml file. More information
              here: https://documentation.wazuh.com/4.9/user-manual/api/security/configuration.html'
            code: 6001
  parameters:
    filename:
      in: query
      name: filename
      description: Filter by filename
      schema:
        type: array
        items:
          type: string
          format: alphanumeric
    limit:
      in: query
      name: limit
      description: 'Maximum number of elements to return. Although up to 100.000 can
        be specified, it is recommended not to exceed 500 elements. Responses may
        be slower the more this number is exceeded. '
      schema:
        type: integer
        format: int32
        default: 500
        minimum: 1
        maximum: 100000
    list_filename_path:
      in: path
      name: filename
      description: Filename (CDB list) to get/edit/delete.
      required: true
      schema:
        type: string
        format: cdb_filename_path
    offset:
      in: query
      name: offset
      description: First element to return in the collection
      schema:
        type: integer
        format: int32
        default: 0
        minimum: 0
    pretty:
      in: query
      name: pretty
      description: Show results in human-readable format
      schema:
        type: boolean
        default: false
    query:
      in: query
      name: q
      description: Query to filter results by. For example q=&quot;status=active&quot;
      schema:
        type: string
    raw:
      in: query
      name: raw
      description: Format response in plain text
      required: false
      schema:
        type: boolean
    search:
      in: query
      name: search
      description: Look for elements containing the specified string. To obtain a
        complementary search, use '-' at the beginning
      schema:
        type: string
        format: search
    select:
      in: query
      name: select
      description: 'Select which fields to return (separated by comma). Use ''.''
        for nested fields. For example, ''{field1: field2}'' may be selected with
        ''field1.field2'''
      schema:
        type: array
        items:
          type: string
          format: names
    sort:
      in: query
      name: sort
      description: 'Sort the collection by a field or fields (separated by comma).
        Use +/- at the beggining to list in ascending or descending order. Use ''.''
        for nested fields. For example, ''{field1: field2}'' may be selected with
        ''field1.field2'''
      schema:
        type: string
        format: sort
    wait_for_complete:
      in: query
      name: wait_for_complete
      description: Disable timeout response
      schema:
        type: boolean
        default: false
    get_dirnames_path:
      in: query
      name: relative_dirname
      description: Filter by relative directory name
      schema:
        type: string
        format: get_dirnames_path
    overwrite:
      in: query
      name: overwrite
      description: If set to false, an exception will be raised when updating contents
        of an already existing filename
      schema:
        type: boolean
        default: false
    distinct:
      in: query
      name: distinct
      description: Look for distinct values.
      schema:
        type: boolean
        default: false
