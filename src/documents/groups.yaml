openapi: 3.0.0
paths:
  /groups:
    delete:
      tags:
      - Groups
      summary: Delete groups
      description: Delete all groups or a list of them
      operationId: api.controllers.agent_controller.delete_groups
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/group:delete'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/groups_list_all'
      responses:
        '200':
          description: Remove multiple group from multiple agents
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/AgentGroupDeleted'
              example:
                data:
                  affected_items:
                  - webserver
                  - dataserver
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                  message: All selected groups were deleted
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    get:
      tags:
      - Groups
      summary: Get groups
      description: Get information about all groups or a list of them. Returns a list
        containing basic information about each group such as number of agents belonging
        to the group and the checksums of the configuration and shared files
      operationId: api.controllers.agent_controller.get_list_group
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/group:read'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/groups_list'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/hash'
      - $ref: '#/components/parameters/query'
      - $ref: '#/components/parameters/select'
      - $ref: '#/components/parameters/distinct'
      responses:
        '200':
          description: List all groups
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseGroups'
              example:
                data:
                  affected_items:
                  - name: default
                    count: 2
                    mergedSum: f8d49771911ed9d5c45b03a40babd065
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                  - name: dmz
                    count: 3
                    mergedSum: 220d6c5fc253f251827ee7487341c0fc
                    configSum: cfbae9ecc10eb15f1b4fc736de6758cc
                  - name: pciserver
                    count: 0
                    mergedSum: 220d6c5fc253f251827ee7487341c0fc
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: All selected groups information was returned
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    post:
      tags:
      - Groups
      summary: Create a group
      description: Create a new group
      operationId: api.controllers.agent_controller.post_group
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/group:create'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupBody'
      responses:
        '200':
          description: Add new agent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: Group 'NewGroup_1' created
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /groups/{group_id}/agents:
    get:
      tags:
      - Groups
      summary: Get agents in a group
      description: Return the list of agents that belong to the specified group
      operationId: api.controllers.agent_controller.get_agents_in_group
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
      - $ref: '#/x-rbac-catalog/actions/group:read'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/group_id'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/select'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/statusAgentParam'
      - $ref: '#/components/parameters/query'
      - $ref: '#/components/parameters/distinct'
      responses:
        '200':
          description: List of agents or error description
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseAgents'
              example:
                data:
                  affected_items:
                  - os:
                      arch: x86_64
                      codename: Focal Fossa
                      major: '20'
                      minor: '04'
                      name: Ubuntu
                      platform: ubuntu
                      uname: Linux |b2497efbf876 |5.8.0-45-generic |#51~20.04.1-Ubuntu
                        SMP Tue Feb 23 13:46:31 UTC 2021 |x86_64
                      version: 20.04.2 LTS
                    mergedSum: 2c769b2ea138d472ee8f1ba23412b5d4
                    node_name: worker1
                    ip: 172.20.0.7
                    id: 4
                    manager: wazuh-worker1
                    group:
                    - default
                    - group1
                    name: b2497efbf876
                    configSum: 052374472f3a0d5c8508241dcc455ea7
                    status: active
                    dateAdd: 2021-05-27 09:14:19+00:00
                    registerIP: any
                    lastKeepAlive: 2021-05-27 09:23:59+00:00
                    version: Wazuh v4.3.0
                    status_code: 0
                  - os:
                      arch: x86_64
                      codename: Focal Fossa
                      major: '20'
                      minor: '04'
                      name: Ubuntu
                      platform: ubuntu
                      uname: Linux |600e27371700 |5.8.0-45-generic |#51~20.04.1-Ubuntu
                        SMP Tue Feb 23 13:46:31 UTC 2021 |x86_64
                      version: 20.04.2 LTS
                    mergedSum: 9a016508cea1e997ab8569f5cfab30f5
                    node_name: worker1
                    ip: 172.20.0.9
                    id: 5
                    manager: wazuh-worker1
                    group:
                    - default
                    - group2
                    name: 600e27371700
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                    status: active
                    dateAdd: 2021-05-27 09:14:19+00:00
                    registerIP: any
                    lastKeepAlive: 2021-05-27 09:23:52+00:00
                    version: Wazuh v4.3.0
                    status_code: 0
                  - os:
                      arch: x86_64
                      codename: Focal Fossa
                      major: '20'
                      minor: '04'
                      name: Ubuntu
                      platform: ubuntu
                      uname: Linux |4bdac19ce5e3 |5.8.0-45-generic |#51~20.04.1-Ubuntu
                        SMP Tue Feb 23 13:46:31 UTC 2021 |x86_64
                      version: 20.04.2 LTS
                    mergedSum: 9a016508cea1e997ab8569f5cfab30f5
                    node_name: worker2
                    ip: 172.20.0.10
                    id: 6
                    manager: wazuh-worker2
                    group:
                    - default
                    - group3
                    name: 4bdac19ce5e3
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                    status: active
                    dateAdd: 2021-05-27 09:14:19+00:00
                    registerIP: any
                    lastKeepAlive: 2021-05-27 09:23:52+00:00
                    version: Wazuh v4.3.0
                    status_code: 0
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: All selected agents information was returned
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /groups/{group_id}/configuration:
    get:
      tags:
      - Groups
      summary: Get group configuration
      description: Return the group configuration defined in the `agent.conf` file
      operationId: api.controllers.agent_controller.get_group_config
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/group:read'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/group_id'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: Get group configuration
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      affected_items:
                        type: array
                        items:
                          $ref: '#/components/schemas/GroupConfiguration'
                      total_affected_items:
                        type: integer
                        format: int32
              example:
                data:
                  total_affected_items: 3
                  affected_items:
                  - filters:
                      name: agent_name
                    config:
                      localfile:
                      - location: /var/log/my.log
                        log_format: syslog
                  - filters:
                      os: Linux
                    config:
                      localfile:
                      - location: /var/log/linux.log
                        log_format: syslog
                  - filters:
                      profile: database
                    config:
                      localfile:
                      - location: /var/log/database.log
                        log_format: syslog
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    put:
      tags:
      - Groups
      summary: Update group configuration
      description: Update an specified group's configuration. This API call expects
        a full valid XML file with the shared configuration tags/syntax
      operationId: api.controllers.agent_controller.put_group_config
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/group:update_config'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/group_id'
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              properties:
                tmp_file:
                  description: File to update
                  type: string
      responses:
        '200':
          description: Upload configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: Agent configuration was successfully updated
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /groups/{group_id}/files:
    get:
      tags:
      - Groups
      summary: Get group files
      description: Return the files placed under the group directory
      operationId: api.controllers.agent_controller.get_group_files
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/group:read'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/group_id'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/hash'
      - $ref: '#/components/parameters/query'
      - $ref: '#/components/parameters/select'
      - $ref: '#/components/parameters/distinct'
      responses:
        '200':
          description: Get group files
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseGroupFiles'
              example:
                data:
                  affected_items:
                  - filename: agent.conf
                    hash: ab73af41699f13fdd81903b5f23d8d00
                  - filename: ar.conf
                    hash: 76d8be9b97d8eae4c239e530ee7e71c8
                  - filename: merged.mg
                    hash: f8d49771911ed9d5c45b03a40babd065
                  - filename: rootkit_files.txt
                    hash: e5ddcac443143cef6237d5f9b8d48585
                  - filename: rootkit_trojans.txt
                    hash: 6bcf7016d3e6b4c7faa62cf265c24dcc
                  - filename: system_audit_rcl.txt
                    hash: be69b84dd5ee73200bb903a46270e18c
                  - filename: system_audit_ssh.txt
                    hash: 407c1f5e103f0cb58249eb7252a84797
                  - filename: win_applications_rcl.txt
                    hash: 0a4ad12c8145aca8a28d31de5c448b48
                  - filename: win_audit_rcl.txt
                    hash: 92d8011facc8b921ece301ea4ce6a616
                  - filename: win_malware_rcl.txt
                    hash: f5e0305e248bd00e05445f329bd1dd5e
                  total_affected_items: 10
                  total_failed_items: 0
                  failed_items: []
                message: All selected groups files were returned
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /groups/{group_id}/files/{file_name}:
    get:
      tags:
      - Groups
      summary: Get a file in group
      description: Return the content of the specified group file
      operationId: api.controllers.agent_controller.get_group_file
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/group:read'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/group_id'
      - $ref: '#/components/parameters/file_name'
      - $ref: '#/components/parameters/type_agents'
      - $ref: '#/components/parameters/raw'
      responses:
        '200':
          description: Get group file in json format
          content:
            application/json:
              schema:
                properties:
                  data:
                    oneOf:
                    - type: array
                    - type: object
                      description: 'The output format depends on the type of file
                        that has been requested: rootkit file, rootkit trojans or
                        rcl'
              example:
                data:
                  vars:
                    web_dirs: /var/www,/var/htdocs,/home/httpd,/usr/local/apache,/usr/local/apache2,/usr/local/www;
                  controls:
                  - name: CIS - Testing against the CIS Debian Linux Benchmark v1.
                    cis: []
                    pci: []
                    condition: all required
                    reference: CIS_Debian_Benchmark_v1.0pdf
                    checks:
                    - f:/etc/debian_version;
                    - f:/proc/sys/kernel/ostype -> Linux;
                  - name: CIS - Debian Linux - 1.4 - Robust partition scheme - /tmp
                      is not on its own partition
                    cis: []
                    pci: []
                    condition: any
                    reference: https://benchmarks.cisecurity.org/tools2/linux/CIS_Debian_Benchmark_v1.0.pdf
                    checks:
                    - f:/etc/fstab -> !r:/tmp;
                error: 0
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
components:
  schemas:
    ApiResponse:
      type: object
      properties:
        message:
          type: string
          description: Human readable description to explain the result of the request
    AllItemsResponseAgents:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - type: object
        required:
        - affected_items
        properties:
          affected_items:
            type: array
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/Agent'
    AllItemsResponseGroups:
      allOf:
      - type: object
        required:
        - affected_items
        properties:
          affected_items:
            type: array
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/AgentGroup'
      - $ref: '#/components/schemas/AllItemsResponse'
    AllItemsResponseGroupFiles:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - type: object
        required:
        - affected_items
        properties:
          affected_items:
            type: array
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/GroupFiles'
    AgentGroupDeleted:
      type: object
      required:
      - affected_items
      properties:
        affected_items:
          type: array
          description: List of removed groups, agents belonging exclusively to the
            removed groups will be reassigned to group default
    GroupConfiguration:
      type: object
      properties:
        filters:
          type: object
          properties:
            os:
              type: string
              description: OS family where the configuration is being applied
            name:
              type: string
              description: The name of the agent where that configuration is being
                applied
            profile:
              type: string
              description: Profile name. Any agent configured to use the defined profile
                may use the block
        config:
          type: object
          description: Group configuration. The fields on this object depend on the
            actual group configuration
      required:
      - filters
      - config
    CreateGroupBody:
      type: object
      properties:
        group_id:
          description: Group name. It can contain any of the characters between a-z,
            A-Z, 0-9, '_', '-' and '.'. Names '.' and '..' are restricted.
          type: string
          format: group_names
          maxLength: 128
      required:
      - group_id
      example:
        group_id: NewGroup_1
  responses:
    ResponseError:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Bad Request
            detail: '''{invalid_param}'' is not a ''{expected_type}''. Failed validating
              ''format'' in schema[''items'']: {''description'': ''{parameter_name}'',
              ''format'': ''{expected_format}'', ''minLength'': {expected_length},
              ''type'': ''{expected_type}'', ''x-scope'': ['''', ''#/components/parameters/{parameter_name}'']}'
    PermissionDeniedResponse:
      description: Response to report a permission denied request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            title: Permission Denied
            detail: 'Permission denied: Resource type: *:*'
            remediation: Please, make sure you have permissions to execute the current
              request. For more information on how to set up permissions, please visit
              https://documentation.wazuh.com/4.9/user-manual/api/rbac/configuration.html
            error: 4000
            dapi_errors:
              unknown-node:
                error: 'Permission denied: Resource type: *:*'
    UnauthorizedResponse:
      description: Response to report an unauthorized request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Unauthorized
            detail: No authorization token provided
    InvalidHTTPMethodResponse:
      description: Response to report an invalid HTTP method
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Method Not Allowed
            detail: Specified method is invalid for this resource
    WrongContentTypeResponse:
      description: Response to report an invalid content-type
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Wazuh Error
            detail: The body type is not the one specified in the content-type
            error: 6002
    RequestTooLargeResponse:
      description: Maximum request body size exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Request Entity Too Large
            detail: Maximum request body size 1048576 exceeded, actual body size 1225245
    TooManyRequestsResponse:
      description: Maximum number of request per minute reached
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Wazuh Error
            detail: Maximum number of requests per minute reached
            remediation: 'This limit can be changed in api.yaml file. More information
              here: https://documentation.wazuh.com/4.9/user-manual/api/security/configuration.html'
            code: 6001
    ResourceNotFoundResponse:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            title: Resource Not Found
            detail: The group does not exist
            remediation: 'Please, use `GET /groups` to find all available groups:
              https://documentation.wazuh.com/4.9/user-manual/api/rbac/configuration.html'
            code: 1710
            dapi_errors:
              unknown-node:
                error: The group does not exist
  parameters:
    file_name:
      in: path
      name: file_name
      description: Filename
      required: true
      schema:
        type: string
        format: alphanumeric
    group_id:
      in: path
      name: group_id
      description: Group ID. (Name of the group)
      required: true
      schema:
        $ref: '#/components/schemas/GroupID'
    hash:
      in: query
      name: hash
      description: Select algorithm to generate the returned checksums
      schema:
        type: string
        enum:
        - md5
        - sha1
        - sha224
        - sha256
        - sha384
        - sha512
        - blake2b
        - blake2s
        - sha3_224
        - sha3_256
        - sha3_384
        - sha3_512
    limit:
      in: query
      name: limit
      description: 'Maximum number of elements to return. Although up to 100.000 can
        be specified, it is recommended not to exceed 500 elements. Responses may
        be slower the more this number is exceeded. '
      schema:
        type: integer
        format: int32
        default: 500
        minimum: 1
        maximum: 100000
    groups_list:
      in: query
      name: groups_list
      description: List of group IDs (separated by comma), all groups selected by
        default if not specified
      schema:
        type: array
        items:
          $ref: '#/components/schemas/GroupID'
    groups_list_all:
      in: query
      name: groups_list
      description: List of group IDs (separated by comma), use the keyword 'all' to
        select all groups
      required: true
      schema:
        type: array
        items:
          $ref: '#/components/schemas/GroupIDListAll'
    offset:
      in: query
      name: offset
      description: First element to return in the collection
      schema:
        type: integer
        format: int32
        default: 0
        minimum: 0
    pretty:
      in: query
      name: pretty
      description: Show results in human-readable format
      schema:
        type: boolean
        default: false
    query:
      in: query
      name: q
      description: Query to filter results by. For example q=&quot;status=active&quot;
      schema:
        type: string
    raw:
      in: query
      name: raw
      description: Format response in plain text
      required: false
      schema:
        type: boolean
    search:
      in: query
      name: search
      description: Look for elements containing the specified string. To obtain a
        complementary search, use '-' at the beginning
      schema:
        type: string
        format: search
    select:
      in: query
      name: select
      description: 'Select which fields to return (separated by comma). Use ''.''
        for nested fields. For example, ''{field1: field2}'' may be selected with
        ''field1.field2'''
      schema:
        type: array
        items:
          type: string
          format: names
    sort:
      in: query
      name: sort
      description: 'Sort the collection by a field or fields (separated by comma).
        Use +/- at the beggining to list in ascending or descending order. Use ''.''
        for nested fields. For example, ''{field1: field2}'' may be selected with
        ''field1.field2'''
      schema:
        type: string
        format: sort
    statusAgentParam:
      in: query
      name: status
      description: Filter by agent status (use commas to enter multiple statuses)
      schema:
        type: array
        items:
          type: string
          enum:
          - active
          - pending
          - never_connected
          - disconnected
        minItems: 1
    type_agents:
      in: query
      name: type
      description: Type of file
      schema:
        type: array
        items:
          type: string
          enum:
          - conf
          - rootkit_files
          - rootkit_trojans
          - rcl
    wait_for_complete:
      in: query
      name: wait_for_complete
      description: Disable timeout response
      schema:
        type: boolean
        default: false
    distinct:
      in: query
      name: distinct
      description: Look for distinct values.
      schema:
        type: boolean
        default: false
