openapi: 3.0.0
paths:
  /agents:
    delete:
      tags:
      - Agents
      summary: Delete agents
      description: Delete all agents or a list of them based on optional criteria
      operationId: api.controllers.agent_controller.delete_agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:delete'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/agents_list_all'
      - $ref: '#/components/parameters/purge'
      - $ref: '#/components/parameters/statusDeleteAgentParam'
      - $ref: '#/components/parameters/older_than'
      - $ref: '#/components/parameters/query'
      - $ref: '#/components/parameters/os.platform'
      - $ref: '#/components/parameters/os.version'
      - $ref: '#/components/parameters/os.name'
      - $ref: '#/components/parameters/manager_host'
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/agent_group'
      - $ref: '#/components/parameters/node_name'
      - $ref: '#/components/parameters/name'
      - $ref: '#/components/parameters/ip'
      - $ref: '#/components/parameters/registerIP'
      responses:
        '200':
          description: Delete agents
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/AllItemsResponseAgentIDs'
              example:
                data:
                  affected_items:
                  - '001'
                  - '002'
                  - '003'
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: All selected agents were deleted
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    get:
      tags:
      - Agents
      summary: List agents
      description: Return information about all available agents or a list of them
      operationId: api.controllers.agent_controller.get_agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/agents_list'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/select'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/statusAgentParam'
      - $ref: '#/components/parameters/query'
      - $ref: '#/components/parameters/olderThanParam'
      - $ref: '#/components/parameters/os.platform'
      - $ref: '#/components/parameters/os.version'
      - $ref: '#/components/parameters/os.name'
      - $ref: '#/components/parameters/manager_host'
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/agent_group'
      - $ref: '#/components/parameters/node_name'
      - $ref: '#/components/parameters/name'
      - $ref: '#/components/parameters/ip'
      - $ref: '#/components/parameters/registerIP'
      - $ref: '#/components/parameters/group_config_status'
      - $ref: '#/components/parameters/distinct'
      responses:
        '200':
          description: List of agents or error description
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseAgents'
              example:
                data:
                  affected_items:
                  - os:
                      arch: x86_64
                      codename: Focal Fossa
                      major: '20'
                      minor: '04'
                      name: Ubuntu
                      platform: ubuntu
                      uname: Linux |ac7cb188d538 |5.8.0-45-generic |#51~20.04.1-Ubuntu
                        SMP Tue Feb 23 13:46:31 UTC 2021 |x86_64
                      version: 20.04.2 LTS
                    lastKeepAlive: '2021-05-26T12:40:40Z'
                    id: '001'
                    dateAdd: 2021-05-26 12:40:08+00:00
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                    manager: wazuh-worker2
                    group:
                    - default
                    registerIP: any
                    ip: 172.25.0.6
                    name: ac7cb188d538
                    status: active
                    mergedSum: 9a016508cea1e997ab8569f5cfab30f5
                    version: Wazuh v4.3.0
                    node_name: worker2
                    group_config_status: synced
                    status_code: 0
                  - os:
                      arch: x86_64
                      codename: Focal Fossa
                      major: '20'
                      minor: '04'
                      name: Ubuntu
                      platform: ubuntu
                      uname: Linux |ac7cb188d538 |5.8.0-45-generic |#51~20.04.1-Ubuntu
                        SMP Tue Feb 23 13:46:31 UTC 2021 |x86_64
                      version: 20.04.2 LTS
                    lastKeepAlive: '2021-05-26T12:40:40Z'
                    id: '002'
                    dateAdd: 2021-05-26 12:40:10+00:00
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                    manager: wazuh-worker2
                    group:
                    - default
                    registerIP: any
                    ip: 172.25.0.11
                    name: 91642a418627
                    status: active
                    mergedSum: 9a016508cea1e997ab8569f5cfab30f5
                    version: Wazuh v4.3.0
                    node_name: worker2
                    group_config_status: synced
                    status_code: 0
                  - os:
                      arch: x86_64
                      codename: Focal Fossa
                      major: '20'
                      minor: '04'
                      name: Ubuntu
                      platform: ubuntu
                      uname: Linux |ac7cb188d538 |5.8.0-45-generic |#51~20.04.1-Ubuntu
                        SMP Tue Feb 23 13:46:31 UTC 2021 |x86_64
                      version: 20.04.2 LTS
                    lastKeepAlive: '2021-05-26T12:40:40Z'
                    id: '003'
                    dateAdd: 2021-05-26 12:40:10+00:00
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                    manager: wazuh-worker2
                    group:
                    - default
                    registerIP: any
                    ip: 172.25.0.10
                    name: a442e15bc84e
                    status: active
                    mergedSum: 9a016508cea1e997ab8569f5cfab30f5
                    version: Wazuh v4.3.0
                    node_name: worker1
                    group_config_status: not synced
                    status_code: 0
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: All selected agents information was returned
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    post:
      tags:
      - Agents
      summary: Add agent
      description: Add a new agent
      operationId: api.controllers.agent_controller.add_agent
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:create'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentAddBody'
            example:
              name: NewHost_2
              ip: 10.0.10.11
      responses:
        '200':
          description: Add an agent
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentIdKey'
              example:
                data:
                  id: 009
                  key: MDA5IE5ld0hvc3RfMiAxMC4wLjEwLjExIDhkNjllMzRiYTM2ZjcwMzgzZmVkNTIyNzk4MzFiZDg2NWQzZGRkZjJhMTkwZWR
                    jMjY5YmRhOTY1ODU4M2JkMjg=
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/{agent_id}/config/{component}/{configuration}:
    get:
      tags:
      - Agents
      summary: Get active configuration
      description: Return the active configuration the agent is currently using. This
        can be different from the configuration present in the configuration file,
        if it has been modified and the agent has not been restarted yet
      operationId: api.controllers.agent_controller.get_agent_config
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/agent_id'
      - $ref: '#/components/parameters/component'
      - $ref: '#/components/parameters/configuration'
      responses:
        '200':
          description: Get agent configuration
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentConfiguration'
              example:
                data:
                  client:
                    config-profile: ubuntu, ubuntu20, ubuntu20.04
                    notify_time: 10
                    time-reconnect: 60
                    force_reconnect_interval: 0
                    ip_update_interval: 0
                    auto_restart: 'yes'
                    remote_conf: 'yes'
                    crypto_method: aes
                    server:
                    - address: nginx-lb/172.25.0.4
                      port: 1514
                      max_retries: 5
                      retry_interval: 10
                      protocol: tcp
                    enrollment:
                    - enabled: 'yes'
                      delay_after_enrollment: 20
                      port: 1515
                      ssl_cipher: HIGH:!ADH:!EXP:!MD5:!RC4:!3DES:!CAMELLIA:@STRENGTH
                      auto_method: 'no'
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/{agent_id}/group:
    delete:
      tags:
      - Agents
      summary: Remove agent from groups
      description: Remove the agent from all groups or a list of them. The agent will
        automatically revert to the default group if it is removed from all its assigned
        groups
      operationId: api.controllers.agent_controller.delete_single_agent_multiple_groups
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:modify_group'
      - $ref: '#/x-rbac-catalog/actions/group:modify_assignments'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/agent_id'
      - $ref: '#/components/parameters/groups_list'
      responses:
        '200':
          description: Remove the agent from all groups
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/AllItemsResponseGroupIDs'
              example:
                data:
                  affected_items:
                  - group1
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Specified agent was removed from returned groups
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/{agent_id}/group/is_sync:
    get:
      tags:
      - Agents
      deprecated: true
      summary: Get configuration sync status
      description: Return whether the agent configuration has been synchronized with
        the agent or not. This can be useful to check after updating a group configuration
      operationId: api.controllers.agent_controller.get_sync_agent
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: Get agent sync
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseAgentsSynced'
              example:
                data:
                  affected_items:
                  - id: '002'
                    synced: true
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Sync info was returned for all selected agents
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/{agent_id}/group/{group_id}:
    delete:
      tags:
      - Agents
      summary: Remove agent from group
      description: Remove an agent from a specified group. If the agent belongs to
        several groups, only the specified group will be deleted.
      operationId: api.controllers.agent_controller.delete_single_agent_single_group
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:modify_group'
      - $ref: '#/x-rbac-catalog/actions/group:modify_assignments'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/agent_id'
      - $ref: '#/components/parameters/group_id'
      responses:
        '200':
          description: Remove agent from a group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: Agent '004' removed from 'dmz'.
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    put:
      tags:
      - Agents
      summary: Assign agent to group
      description: Assign an agent to a specified group
      operationId: api.controllers.agent_controller.put_agent_single_group
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:modify_group'
      - $ref: '#/x-rbac-catalog/actions/group:modify_assignments'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/agent_id'
      - $ref: '#/components/parameters/group_id'
      - $ref: '#/components/parameters/force_single_group'
      responses:
        '200':
          description: Add agent to group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                data:
                  affected_items:
                  - '003'
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All selected agents were assigned to group3
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/{agent_id}/key:
    get:
      tags:
      - Agents
      summary: Get key
      description: Return the key of an agent
      operationId: api.controllers.agent_controller.get_agent_key
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: Get agent key
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseAgentsKeys'
              example:
                data:
                  affected_items:
                  - id: '002'
                    key: MDAyIHdhenVoLWFnZW50MiBhbnkgMzAxYzk0Y2I3NDc5MzliMjAyYTg0OGE3NGIwMTNkODQwZWJkNWUyZmIxMjQ3Nzhl
                      NDhjYzUxOGE4MWQyNDFkYw==
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Obtained keys for all selected agents
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/{agent_id}/restart:
    put:
      tags:
      - Agents
      summary: Restart agent
      description: Restart the specified agent
      operationId: api.controllers.agent_controller.restart_agent
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:restart'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: Agent restarted
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ItemAffected'
                example:
                  data:
                    affected_items:
                    - '002'
                    total_affected_items: 1
                    total_failed_items: 0
                    failed_items: []
                  message: Restart command was sent to all agents
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/{agent_id}/daemons/stats:
    get:
      tags:
      - Agents
      summary: Get Wazuh daemon stats from an agent
      description: Return Wazuh statistical information from specified daemons in
        a specified agent
      operationId: api.controllers.agent_controller.get_daemon_stats
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/agent_id'
      - $ref: '#/components/parameters/daemons_list_agents'
      responses:
        '200':
          description: Wazuh daemon stats
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseWazuhDaemonStatsAgents'
              example:
                data:
                  affected_items:
                  - timestamp: 2022-07-27 14:09:20+00:00
                    name: wazuh-remoted
                    agents:
                    - uptime: 2022-07-27 14:09:20+00:00
                      id: 1
                      metrics:
                        messages:
                          received_breakdown:
                            control: 2
                            control_breakdown:
                              keepalive: 1
                              request: 0
                              shutdown: 0
                              startup: 1
                            event: 195
                          sent_breakdown:
                            ack: 2
                            ar: 0
                            cfga: 2
                            discarded: 0
                            request: 0
                            shared: 0
                  - timestamp: 2022-07-27 14:09:20+00:00
                    name: wazuh-analysisd
                    agents:
                    - uptime: 2022-07-27 14:09:20+00:00
                      id: 1
                      metrics:
                        events:
                          processed: 195
                          received_breakdown:
                            decoded_breakdown:
                              agent: 0
                              dbsync: 0
                              integrations_breakdown:
                                virustotal: 0
                              modules_breakdown:
                                aws: 0
                                azure: 0
                                ciscat: 0
                                command: 0
                                docker: 0
                                gcp: 0
                                github: 0
                                logcollector_breakdown:
                                  eventchannel: 0
                                  eventlog: 0
                                  macos: 0
                                  others: 0
                                office365: 0
                                ms-graph: 0
                                oscap: 0
                                osquery: 0
                                rootcheck: 1
                                sca: 194
                                syscheck: 0
                                syscollector: 0
                                upgrade: 0
                                vulnerability: 0
                              monitor: 0
                              remote: 0
                          written_breakdown:
                            alerts: 191
                            archives: 0
                            firewall: 0
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: Statistical information for each daemon was successfully
                  read
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/{agent_id}/stats/{component}:
    get:
      tags:
      - Agents
      summary: Get agent's component stats
      description: Return Wazuh's {component} statistical information from agent {agent_id}
      operationId: api.controllers.agent_controller.get_component_stats
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/agent_id'
      - $ref: '#/components/parameters/stats_component'
      responses:
        '200':
          description: Component stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                data:
                  affected_items:
                  - global:
                      start: '2021-05-27T08:01:38Z'
                      end: '2021-05-27T08:08:13Z'
                      files:
                      - location: df -P
                        events: 20
                        bytes: 1784
                        targets:
                        - name: agent
                          drops: 0
                      - location: /var/log/dpkg.log
                        events: 0
                        bytes: 0
                        targets:
                        - name: agent
                          drops: 0
                      - location: /var/ossec/logs/active-responses.log
                        events: 0
                        bytes: 0
                        targets:
                        - name: agent
                          drops: 0
                      - location: last -n 20
                        events: 2
                        bytes: 132
                        targets:
                        - name: agent
                          drops: 0
                    interval:
                      start: '2021-05-27T08:08:08Z'
                      end: '2021-05-27T08:08:08Z'
                      files:
                      - location: df -P
                        events: 0
                        bytes: 0
                        targets:
                        - name: agent
                          drops: 0
                      - location: /var/log/dpkg.log
                        events: 0
                        bytes: 0
                        targets:
                        - name: agent
                          drops: 0
                      - location: /var/ossec/logs/active-responses.log
                        events: 0
                        bytes: 0
                        targets:
                        - name: agent
                          drops: 0
                      - location: last -n 20
                        events: 0
                        bytes: 0
                        targets:
                        - name: agent
                          drops: 0
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Statistical information for each agent was successfully read
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/upgrade:
    put:
      tags:
      - Agents
      summary: Upgrade agents
      description: Upgrade agents using a WPK file from online repository. When upgrading
        more than 3000 agents at the same time, it's highly recommended to use the
        parameter `wait_for_complete` set to `true` to avoid a possible API timeout
      operationId: api.controllers.agent_controller.put_upgrade_agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:upgrade'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/agents_list_all'
      - $ref: '#/components/parameters/wpk_repo'
      - $ref: '#/components/parameters/upgrade_version'
      - $ref: '#/components/parameters/use_http'
      - $ref: '#/components/parameters/force'
      - $ref: '#/components/parameters/package_type'
      - $ref: '#/components/parameters/query'
      - $ref: '#/components/parameters/os.platform'
      - $ref: '#/components/parameters/os.version'
      - $ref: '#/components/parameters/os.name'
      - $ref: '#/components/parameters/manager_host'
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/agent_group'
      - $ref: '#/components/parameters/node_name'
      - $ref: '#/components/parameters/name'
      - $ref: '#/components/parameters/ip'
      - $ref: '#/components/parameters/registerIP'
      responses:
        '200':
          description: Agents upgraded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                data:
                  affected_items:
                  - agent: '001'
                    task_id: 1
                  - agent: '002'
                    task_id: 2
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: All upgrade tasks were created
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/upgrade_custom:
    put:
      tags:
      - Agents
      summary: Upgrade agents custom
      description: Upgrade the agents using a local WPK file. When upgrading more
        than 3000 agents at the same time, it's highly recommended to use the parameter
        `wait_for_complete` set to `true` to avoid a possible API timeout
      operationId: api.controllers.agent_controller.put_upgrade_custom_agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:upgrade'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/agents_list_all'
      - $ref: '#/components/parameters/file_path'
      - $ref: '#/components/parameters/installer'
      - $ref: '#/components/parameters/query'
      - $ref: '#/components/parameters/os.platform'
      - $ref: '#/components/parameters/os.version'
      - $ref: '#/components/parameters/os.name'
      - $ref: '#/components/parameters/manager_host'
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/agent_group'
      - $ref: '#/components/parameters/node_name'
      - $ref: '#/components/parameters/name'
      - $ref: '#/components/parameters/ip'
      - $ref: '#/components/parameters/registerIP'
      responses:
        '200':
          description: Agents upgraded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                data:
                  affected_items:
                  - agent: '005'
                    task_id: 3
                  - agent: '006'
                    task_id: 4
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: All upgrade tasks were created
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/upgrade_result:
    get:
      tags:
      - Agents
      summary: Get upgrade results
      description: Return the agents upgrade results
      operationId: api.controllers.agent_controller.get_agent_upgrade
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:upgrade'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/agents_list'
      - $ref: '#/components/parameters/query'
      - $ref: '#/components/parameters/os.platform'
      - $ref: '#/components/parameters/os.version'
      - $ref: '#/components/parameters/os.name'
      - $ref: '#/components/parameters/manager_host'
      - $ref: '#/components/parameters/version'
      - $ref: '#/components/parameters/agent_group'
      - $ref: '#/components/parameters/node_name'
      - $ref: '#/components/parameters/name'
      - $ref: '#/components/parameters/ip'
      - $ref: '#/components/parameters/registerIP'
      responses:
        '200':
          description: Get agent upgrade results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                data:
                  affected_items:
                  - message: Success
                    agent: '001'
                    task_id: 1
                    node: worker1
                    module: upgrade_module
                    command: upgrade
                    status: 'Legacy upgrade: check the result manually since the agent
                      cannot report the result of the task'
                    create_time: '2020-11-03T15:59:32Z'
                    update_time: '2020-11-03T16:01:55Z'
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All upgrade tasks were returned
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/group:
    delete:
      tags:
      - Agents
      summary: Remove agents from group
      description: Remove all agents assignment or a list of them from the specified
        group
      operationId: api.controllers.agent_controller.delete_multiple_agent_single_group
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:modify_group'
      - $ref: '#/x-rbac-catalog/actions/group:modify_assignments'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/agents_list_all'
      - $ref: '#/components/parameters/group_id_query'
      responses:
        '200':
          description: Remove multiple agents assignment from a single group
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/AllItemsResponseAgentIDs'
              example:
                data:
                  affected_items:
                  - '002'
                  - '006'
                  - 008
                  - '010'
                  total_affected_items: 4
                  total_failed_items: 0
                  failed_items: []
                message: All selected agents were removed from group group1
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
    put:
      tags:
      - Agents
      summary: Assign agents to group
      description: Assign all agents or a list of them to the specified group
      operationId: api.controllers.agent_controller.put_multiple_agent_single_group
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:modify_group'
      - $ref: '#/x-rbac-catalog/actions/group:modify_assignments'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/agents_list'
      - $ref: '#/components/parameters/group_id_query'
      - $ref: '#/components/parameters/force_single_group'
      responses:
        '200':
          description: Assign multiple agents to a single group
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/AllItemsResponseAgentIDs'
              example:
                data:
                  affected_items:
                  - '001'
                  - '002'
                  failed_items:
                  - error:
                      code: 1701
                      message: Agent does not exist
                      remediation: Please, use `GET /agents?select=id,name` to find
                        all available agents
                    id:
                    - '999'
                  total_affected_items: 2
                  total_failed_items: 1
                  message: Some agents were not assigned to group2 and removed from
                    the other groups
                  error: 2
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/group/{group_id}/restart:
    put:
      tags:
      - Agents
      summary: Restart agents in group
      description: Restart all agents which belong to a given group
      operationId: api.controllers.agent_controller.restart_agents_by_group
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:restart'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/group_id'
      responses:
        '200':
          description: Agents restarted
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseAgentIDs'
                example:
                  data:
                    affected_items:
                    - '002'
                    - '003'
                    - '005'
                    total_affected_items: 3
                    total_failed_items: 0
                    failed_items: []
                    message: Restart command was sent to all agents
                    error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/insert:
    post:
      tags:
      - Agents
      summary: Add agent full
      description: Add an agent specifying its name, ID and IP. If an agent with the
        same name, the same ID or the same IP already exists, replace it using the
        `force` parameter
      operationId: api.controllers.agent_controller.insert_agent
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:create'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentInsertBody'
            example:
              name: NewHost_2
              ip: 10.0.10.11
              id: '123'
              key: 1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64
              force:
                enabled: true
                disconnected_time:
                  enabled: true
                  value: 30m
                after_registration_time: 2h
      responses:
        '200':
          description: Insert new agent
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentIdKey'
              example:
                data:
                  id: '010'
                  key: MDEwIHRlc3RfYWdlbnRfd2F6dWhfIDE3Mi4xNi4xNi4xNyBmZTNhYzUyYmUxMDc2MDgwOGI4Y2JiZTczNzFjZDIzMWJjYjF
                    jZjUyMDVjYjMzNTI1YzhjZDEwZGIwYTkyM2E4
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/insert/quick:
    post:
      tags:
      - Agents
      summary: Add agent quick
      description: Add a new agent with name `agent_name`. This agent will use `any`
        as IP
      operationId: api.controllers.agent_controller.post_new_agent
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:create'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/agent_name'
      responses:
        '200':
          description: Agent added
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentIdKey'
              example:
                data:
                  id: '011'
                  key: MDExIHRlc3Rfd2F6dWhfcXVpY2sgYW55IDc3ZjNhY2RmMzBhN2ZlNzY0ODVmZTQ3YjUzMzc5ZWQ3ZDA1NDVhYzIyZDQ1NGY
                    4YzcyZTZhNDU1MjVjYzY3OTM=
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/no_group:
    get:
      tags:
      - Agents
      summary: List agents without group
      description: Return a list with all the available agents without an assigned
        group
      operationId: api.controllers.agent_controller.get_agent_no_group
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/select'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: Get agents without group
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseAgents'
              example:
                data:
                  affected_items:
                  - node_name: unknown
                    ip: 172.16.16.16
                    id: 009
                    name: test_agent_wazuh
                    status: never_connected
                    dateAdd: 2021-05-27 10:06:13+00:00
                    registerIP: 172.16.16.16
                    status_code: 0
                    group_config_status: not synced
                  - node_name: unknown
                    ip: 172.16.16.17
                    id: 8
                    name: test_agent_wazuh2
                    status: never_connected
                    dateAdd: 2021-05-27 10:06:27+00:00
                    registerIP: 172.16.16.17
                    status_code: 0
                    group_config_status: not synced
                  - node_name: unknown
                    ip: any
                    id: 9
                    name: test_wazuh_quick
                    status: never_connected
                    dateAdd: 2021-05-27 10:07:37+00:00
                    registerIP: any
                    status_code: 0
                    group_config_status: not synced
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: All selected agents information was returned
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/node/{node_id}/restart:
    put:
      tags:
      - Agents
      summary: Restart agents in node
      description: Restart all agents which belong to a specific given node
      operationId: api.controllers.agent_controller.restart_agents_by_node
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/cluster:read'
      - $ref: '#/x-rbac-catalog/actions/agent:restart'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: Agents restarted
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseAgentIDs'
              example:
                data:
                  affected_items:
                  - '002'
                  - '006'
                  - 008
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: Restart command was sent to all agents
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/outdated:
    get:
      tags:
      - Agents
      summary: List outdated agents
      description: Return the list of outdated agents
      operationId: api.controllers.agent_controller.get_agent_outdated
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/select'
      - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: Get outdated agents
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseAgents'
              example:
                data:
                  affected_items:
                  - os:
                      arch: x86_64
                      codename: Focal Fossa
                      major: '20'
                      minor: '04'
                      name: Ubuntu
                      platform: ubuntu
                      uname: Linux |ac7cb188d538 |5.8.0-45-generic |#51~20.04.1-Ubuntu
                        SMP Tue Feb 23 13:46:31 UTC 2021 |x86_64
                      version: 20.04.2 LTS
                    lastKeepAlive: '2024-02-26T12:40:40Z'
                    id: '001'
                    dateAdd: 2024-02-26 12:40:08+00:00
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                    manager: wazuh-worker2
                    group:
                    - default
                    registerIP: any
                    ip: 172.25.0.6
                    name: ac7cb188d538
                    status: active
                    mergedSum: 9a016508cea1e997ab8569f5cfab30f5
                    version: Wazuh v3.0.0
                    node_name: worker2
                    group_config_status: synced
                    status_code: 0
                  - os:
                      arch: x86_64
                      codename: Focal Fossa
                      major: '20'
                      minor: '04'
                      name: Ubuntu
                      platform: ubuntu
                      uname: Linux |ac7cb188d538 |5.8.0-45-generic |#51~20.04.1-Ubuntu
                        SMP Tue Feb 23 13:46:31 UTC 2021 |x86_64
                      version: 20.04.2 LTS
                    lastKeepAlive: '2024-02-26T12:40:40Z'
                    id: '002'
                    dateAdd: 2024-02-26 12:40:10+00:00
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                    manager: wazuh-worker2
                    group:
                    - default
                    registerIP: any
                    ip: 172.25.0.11
                    name: 91642a418627
                    status: active
                    mergedSum: 9a016508cea1e997ab8569f5cfab30f5
                    version: Wazuh v3.0.0
                    node_name: worker2
                    group_config_status: synced
                    status_code: 0
                  total_affected_items: 2
                  total_failed_items: 0
                  failed_items: []
                message: All selected agents information was returned
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/reconnect:
    put:
      tags:
      - Agents
      summary: Force reconnect agents
      description: Force reconnect all agents or a list of them
      operationId: api.controllers.agent_controller.reconnect_agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:reconnect'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/agents_list'
      responses:
        '200':
          description: Agents reconnected
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseAgentIDs'
                example:
                  data:
                    affected_items:
                    - '001'
                    - '002'
                    - '003'
                    total_affected_items: 3
                    total_failed_items: 0
                    failed_items: []
                  message: Force reconnect command was sent to all agents
                  error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/restart:
    put:
      tags:
      - Agents
      summary: Restart agents
      description: Restart all agents or a list of them
      operationId: api.controllers.agent_controller.restart_agents
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:restart'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/agents_list'
      responses:
        '200':
          description: Agents restarted
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseAgentIDs'
                example:
                  data:
                    affected_items:
                    - '001'
                    - '002'
                    - '003'
                    - '004'
                    - '005'
                    - '006'
                    - '007'
                    - 008
                    total_affected_items: 8
                    total_failed_items: 3
                    failed_items:
                    - error:
                        code: 1707
                        message: Cannot send request, agent is not active
                        remediation: Please, check non-active agents connection and
                          try again. Visit https://documentation.wazuh.com/4.9/user-manual/registering/index.html
                          and https://documentation.wazuh.com/4.9/user-manual/agents/agent-connection.html
                          to obtain more information on registering and connecting
                          agents
                      id:
                      - 009
                      - '010'
                      - '011'
                  message: Restart command was not sent to some agents
                  error: 2
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/stats/distinct:
    get:
      tags:
      - Agents
      summary: List agents distinct
      description: Return all the different combinations that agents have for the
        selected fields. It also indicates the total number of agents that have each
        combination
      operationId: api.controllers.agent_controller.get_agent_fields
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: Get fields in agents
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseAgentsDistinct'
              example:
                data:
                  affected_items:
                  - os:
                      version: 20.04.2 LTS
                    count: 2
                  - os:
                      version: N/A
                    count: 1
                  total_affected_items: 3
                  total_failed_items: 0
                  failed_items: []
                message: All selected agents information was returned
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/summary/os:
    get:
      tags:
      - Agents
      summary: Summarize agents OS
      description: Return a summary of the OS of available agents
      operationId: api.controllers.agent_controller.get_agent_summary_os
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: Get summary of agents OS
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
              example:
                data:
                  affected_items:
                  - ubuntu
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: Showing the operative system of all specified agents
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /agents/summary/status:
    get:
      tags:
      - Agents
      summary: Summarize agents status
      description: Return a summary of the connection and groups configuration synchronization
        statuses of available agents
      operationId: api.controllers.agent_controller.get_agent_summary_status
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/agent:read'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: Get summary of agents connection and group configuration statuses
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentsSummaryStatus'
              example:
                data:
                  connection:
                    active: 8
                    disconnected: 0
                    never_connected: 3
                    pending: 0
                    total: 11
                  configuration:
                    synced: 8
                    not_synced: 3
                    total: 11
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
components:
  schemas:
    ApiResponse:
      type: object
      properties:
        message:
          type: string
          description: Human readable description to explain the result of the request
    ItemAffected:
      type: object
      required:
      - affected_items
      properties:
        affected_items:
          type: array
          description: Items that successfully applied the API call action
          items:
            oneOf:
            - type: string
            - type: object
    AllItemsResponseAgents:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - type: object
        required:
        - affected_items
        properties:
          affected_items:
            type: array
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/Agent'
    AllItemsResponseAgentsDistinct:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - type: object
        required:
        - affected_items
        properties:
          affected_items:
            type: array
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/AgentDistinct'
    AllItemsResponseWazuhDaemonStatsAgents:
      allOf:
      - type: object
        required:
        - affected_items
        properties:
          affected_items:
            type: array
            description: Items that successfully applied the API call action
            items:
              oneOf:
              - $ref: '#/components/schemas/WazuhRemotedStatsAgentsItem'
              - $ref: '#/components/schemas/WazuhAnalysisdStatsAgentsItem'
      - $ref: '#/components/schemas/AllItemsResponse'
    AllItemsResponseAgentIDs:
      allOf:
      - type: object
        required:
        - affected_items
        properties:
          affected_items:
            type: array
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/AgentID'
      - $ref: '#/components/schemas/AllItemsResponse'
    AllItemsResponseGroupIDs:
      allOf:
      - type: object
        required:
        - affected_items
        properties:
          affected_items:
            type: array
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/GroupID'
      - $ref: '#/components/schemas/AllItemsResponse'
    AllItemsResponseAgentsSynced:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - type: object
        required:
        - affected_items
        properties:
          affected_items:
            type: array
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/AgentSynced'
    AllItemsResponseAgentsKeys:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - type: object
        required:
        - affected_items
        properties:
          affected_items:
            type: array
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/AgentIdKey'
    AgentAddBody:
      type: object
      properties:
        name:
          description: Agent name
          type: string
          format: names
        ip:
          description: 'If this is not included, the API will get the IP automatically.
            Allowed values: IP, IP/NET, ANY'
          type: string
          format: alphanumeric_symbols
      required:
      - name
    AgentIdKey:
      type: object
      required:
      - id
      - key
      properties:
        id:
          $ref: '#/components/schemas/AgentID'
        key:
          type: string
          format: base64
    AgentInsertBody:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AgentID'
        key:
          type: string
          maxLength: 64
          minLength: 64
          format: wazuh_key
          description: Key to use when communicating with the manager. The agent must
            have the same key on its `client.keys` file
        name:
          description: Agent name
          type: string
          format: names
        ip:
          description: 'If this is not included, the API will get the IP automatically.
            Allowed values: IP, IP/NET, ANY'
          type: string
          format: alphanumeric_symbols
        force:
          $ref: '#/components/schemas/AgentInsertForce'
      required:
      - name
    AgentsSummaryStatus:
      type: object
      properties:
        connection:
          type: object
          properties:
            total:
              type: integer
              format: int32
            active:
              type: integer
              format: int32
            disconnected:
              type: integer
              format: int32
            never_connected:
              type: integer
              format: int32
            pending:
              type: integer
              format: int32
        configuration:
          type: object
          properties:
            total:
              type: integer
              format: int32
            synced:
              type: integer
              format: int32
            not_synced:
              type: integer
              format: int32
    AgentConfiguration:
      type: object
      description: Current agent's configuration. The output varies with requested
        component and the agent configuration
  responses:
    ResponseError:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Bad Request
            detail: '''{invalid_param}'' is not a ''{expected_type}''. Failed validating
              ''format'' in schema[''items'']: {''description'': ''{parameter_name}'',
              ''format'': ''{expected_format}'', ''minLength'': {expected_length},
              ''type'': ''{expected_type}'', ''x-scope'': ['''', ''#/components/parameters/{parameter_name}'']}'
    PermissionDeniedResponse:
      description: Response to report a permission denied request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            title: Permission Denied
            detail: 'Permission denied: Resource type: *:*'
            remediation: Please, make sure you have permissions to execute the current
              request. For more information on how to set up permissions, please visit
              https://documentation.wazuh.com/4.9/user-manual/api/rbac/configuration.html
            error: 4000
            dapi_errors:
              unknown-node:
                error: 'Permission denied: Resource type: *:*'
    UnauthorizedResponse:
      description: Response to report an unauthorized request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Unauthorized
            detail: No authorization token provided
    InvalidHTTPMethodResponse:
      description: Response to report an invalid HTTP method
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Method Not Allowed
            detail: Specified method is invalid for this resource
    WrongContentTypeResponse:
      description: Response to report an invalid content-type
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Wazuh Error
            detail: The body type is not the one specified in the content-type
            error: 6002
    RequestTooLargeResponse:
      description: Maximum request body size exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Request Entity Too Large
            detail: Maximum request body size 1048576 exceeded, actual body size 1225245
    TooManyRequestsResponse:
      description: Maximum number of request per minute reached
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Wazuh Error
            detail: Maximum number of requests per minute reached
            remediation: 'This limit can be changed in api.yaml file. More information
              here: https://documentation.wazuh.com/4.9/user-manual/api/security/configuration.html'
            code: 6001
    ResourceNotFoundResponse:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            title: Resource Not Found
            detail: The group does not exist
            remediation: 'Please, use `GET /groups` to find all available groups:
              https://documentation.wazuh.com/4.9/user-manual/api/rbac/configuration.html'
            code: 1710
            dapi_errors:
              unknown-node:
                error: The group does not exist
  parameters:
    agent_id:
      in: path
      name: agent_id
      description: Agent ID. All possible values from 000 onwards
      required: true
      schema:
        $ref: '#/components/schemas/AgentID'
    agent_name:
      in: query
      name: agent_name
      description: 'Agent name. The special characters allowed are: ''-'',''_'',''.'' '
      required: true
      schema:
        type: string
        format: names
        maxLength: 128
    component:
      in: path
      name: component
      description: Selected agent's component
      required: true
      schema:
        type: string
        enum:
        - agent
        - agentless
        - analysis
        - auth
        - com
        - csyslog
        - integrator
        - logcollector
        - mail
        - monitor
        - request
        - syscheck
        - wazuh-db
        - wmodules
    configuration:
      in: path
      name: configuration
      description: '<p>Selected agent''s configuration to read. The configuration
        to read depends on the selected component.

        The following table shows all available combinations of component and configuration
        values:</p>

        <table class="table table-striped table-bordered">

        <thead>

        <tr>

        <th>Component</th>

        <th>Configuration</th>

        <th>Tag</th>

        </tr>

        </thead>

        <tbody>

        <tr>

        <td>agent</td>

        <td>client</td>

        <td><code>&lt;client&gt;</code></td>

        </tr>

        <tr>

        <td>agent</td>

        <td>buffer</td>

        <td><code>&lt;client_buffer&gt;</code></td>

        </tr>

        <tr>

        <td>agent</td>

        <td>labels</td>

        <td><code>&lt;labels&gt;</code></td>

        </tr>

        <tr>

        <td>agent</td>

        <td>internal</td>

        <td><code>&lt;agent&gt;</code>, <code>&lt;monitord&gt;</code>, <code>&lt;remoted&gt;</code></td>

        </tr>

        <tr>

        <td>agentless</td>

        <td>agentless</td>

        <td><code>&lt;agentless&gt;</code></td>

        </tr>

        <tr>

        <td>analysis</td>

        <td>global</td>

        <td><code>&lt;global&gt;</code></td>

        </tr>

        <tr>

        <td>analysis</td>

        <td>active_response</td>

        <td><code>&lt;active-response&gt;</code></td>

        </tr>

        <tr>

        <td>analysis</td>

        <td>alerts</td>

        <td><code>&lt;alerts&gt;</code></td>

        </tr>

        <tr>

        <td>analysis</td>

        <td>command</td>

        <td><code>&lt;command&gt;</code></td>

        </tr>

        <tr>

        <td>analysis</td>

        <td>rules</td>

        <td><code>&lt;rule&gt;</code></td>

        </tr>

        <tr>

        <td>analysis</td>

        <td>decoders</td>

        <td><code>&lt;decoder&gt;</code></td>

        </tr>

        <tr>

        <td>analysis</td>

        <td>internal</td>

        <td><code>&lt;analysisd&gt;</code></td>

        </tr>

        <tr>

        <td>analysis</td>

        <td>rule_test</td>

        <td><code>&lt;rule_test&gt;</code></td>

        </tr>

        <tr>

        <td>auth</td>

        <td>auth</td>

        <td><code>&lt;auth&gt;</code></td>

        </tr>

        <tr>

        <td>com</td>

        <td>active-response</td>

        <td><code>&lt;active-response&gt;</code></td>

        </tr>

        <tr>

        <td>com</td>

        <td>logging</td>

        <td><code>&lt;logging&gt;</code></td>

        </tr>

        <tr>

        <td>com</td>

        <td>internal</td>

        <td><code>&lt;execd&gt;</code></td>

        </tr>

        <tr>

        <td>com</td>

        <td>cluster</td>

        <td><code>&lt;cluster&gt;</code></td>

        </tr>

        <tr>

        <td>csyslog</td>

        <td>csyslog</td>

        <td><code>&lt;csyslog_output&gt;</code></td>

        </tr>

        <tr>

        <td>integrator</td>

        <td>integration</td>

        <td><code>&lt;integration&gt;</code></td>

        </tr>

        <tr>

        <td>logcollector</td>

        <td>localfile</td>

        <td><code>&lt;localfile&gt;</code></td>

        </tr>

        <tr>

        <td>logcollector</td>

        <td>socket</td>

        <td><code>&lt;socket&gt;</code></td>

        </tr>

        <tr>

        <td>logcollector</td>

        <td>internal</td>

        <td><code>&lt;logcollector&gt;</code></td>

        </tr>

        <tr>

        <td>mail</td>

        <td>global</td>

        <td><code>&lt;global&gt;&lt;email...&gt;</code></td>

        </tr>

        <tr>

        <td>mail</td>

        <td>alerts</td>

        <td><code>&lt;email_alerts&gt;</code></td>

        </tr>

        <tr>

        <td>mail</td>

        <td>internal</td>

        <td><code>&lt;maild&gt;</code></td>

        </tr>

        <tr>

        <td>monitor</td>

        <td>global</td>

        <td><code>&lt;global&gt;</code></td>

        </tr>

        <tr>

        <td>monitor</td>

        <td>internal</td>

        <td><code>&lt;monitord&gt;</code></td>

        </tr>

        <tr>

        <td>monitor</td>

        <td>reports</td>

        <td><code>&lt;reports&gt;</code></td>

        </tr>

        <tr>

        <td>request</td>

        <td>global</td>

        <td><code>&lt;global&gt;</code></td>

        </tr>

        <tr>

        <td>request</td>

        <td>remote</td>

        <td><code>&lt;remote&gt;</code></td>

        </tr>

        <tr>

        <td>request</td>

        <td>internal</td>

        <td><code>&lt;remoted&gt;</code></td>

        </tr>

        <tr>

        <td>syscheck</td>

        <td>syscheck</td>

        <td><code>&lt;syscheck&gt;</code></td>

        </tr>

        <tr>

        <td>syscheck</td>

        <td>rootcheck</td>

        <td><code>&lt;rootcheck&gt;</code></td>

        </tr>

        <tr>

        <td>syscheck</td>

        <td>internal</td>

        <td><code>&lt;syscheck&gt;</code>, <code>&lt;rootcheck&gt;</code></td>

        </tr>

        <tr>

        <td>wazuh-db</td>

        <td>internal</td>

        <td><code>&lt;wazuh_db&gt;</code></td>

        </tr>

        <tr>

        <td>wazuh-db</td>

        <td>wdb</td>

        <td><code>&lt;wdb&gt;</code></td>

        </tr>

        <tr>

        <td>wmodules</td>

        <td>wmodules</td>

        <td><code>&lt;wodle&gt;</code></td>

        </tr>

        </tbody>

        </table>

        '
      required: true
      schema:
        type: string
        enum:
        - client
        - buffer
        - labels
        - internal
        - agentless
        - global
        - active_response
        - alerts
        - command
        - rules
        - decoders
        - auth
        - logging
        - reports
        - active-response
        - cluster
        - csyslog
        - integration
        - localfile
        - socket
        - remote
        - syscheck
        - rootcheck
        - wdb
        - wmodules
        - rule_test
    daemons_list_agents:
      in: query
      name: daemons_list
      description: List of daemon names (separated by comma), all daemons selected
        by default if not specified
      schema:
        type: array
        items:
          type: string
          enum:
          - wazuh-analysisd
          - wazuh-remoted
    fields:
      in: query
      name: fields
      description: List of fields affecting the operation
      schema:
        type: array
        items:
          type: string
          format: names
    group_id:
      in: path
      name: group_id
      description: Group ID. (Name of the group)
      required: true
      schema:
        $ref: '#/components/schemas/GroupID'
    group_id_query:
      in: query
      name: group_id
      description: Group ID. (Name of the group)
      required: true
      schema:
        $ref: '#/components/schemas/GroupID'
    agent_group:
      in: query
      name: group
      description: Filter by group of agents
      schema:
        $ref: '#/components/schemas/GroupID'
    limit:
      in: query
      name: limit
      description: 'Maximum number of elements to return. Although up to 100.000 can
        be specified, it is recommended not to exceed 500 elements. Responses may
        be slower the more this number is exceeded. '
      schema:
        type: integer
        format: int32
        default: 500
        minimum: 1
        maximum: 100000
    agents_list:
      in: query
      name: agents_list
      description: List of agent IDs (separated by comma), all agents selected by
        default if not specified
      schema:
        type: array
        items:
          $ref: '#/components/schemas/AgentID'
    agents_list_all:
      in: query
      name: agents_list
      description: List of agent IDs (separated by comma), use the keyword `all` to
        select all agents
      required: true
      schema:
        type: array
        items:
          $ref: '#/components/schemas/AgentIDListAll'
    groups_list:
      in: query
      name: groups_list
      description: List of group IDs (separated by comma), all groups selected by
        default if not specified
      schema:
        type: array
        items:
          $ref: '#/components/schemas/GroupID'
    manager_host:
      in: query
      name: manager
      description: Filter by manager hostname where agents are connected to
      schema:
        type: string
        format: alphanumeric
    name:
      in: query
      name: name
      description: Filter by name
      schema:
        type: string
        format: alphanumeric
    offset:
      in: query
      name: offset
      description: First element to return in the collection
      schema:
        type: integer
        format: int32
        default: 0
        minimum: 0
    olderThanParam:
      in: query
      name: older_than
      description: Filter out agents whose time lapse from last keep alive signal
        is longer than specified. Time in seconds, ‘[n_days]d’, ‘[n_hours]h’, ‘[n_minutes]m’
        or ‘[n_seconds]s’. For never_connected agents, uses the register date. For
        example, `7d`, `10s` and `10` are valid values. If no time unit is specified,
        seconds are used
      schema:
        type: string
        format: timeframe
    pretty:
      in: query
      name: pretty
      description: Show results in human-readable format
      schema:
        type: boolean
        default: false
    purge:
      in: query
      name: purge
      description: Permanently delete an agent from the key store
      schema:
        type: boolean
        default: false
    query:
      in: query
      name: q
      description: Query to filter results by. For example q=&quot;status=active&quot;
      schema:
        type: string
    search:
      in: query
      name: search
      description: Look for elements containing the specified string. To obtain a
        complementary search, use '-' at the beginning
      schema:
        type: string
        format: search
    select:
      in: query
      name: select
      description: 'Select which fields to return (separated by comma). Use ''.''
        for nested fields. For example, ''{field1: field2}'' may be selected with
        ''field1.field2'''
      schema:
        type: array
        items:
          type: string
          format: names
    sort:
      in: query
      name: sort
      description: 'Sort the collection by a field or fields (separated by comma).
        Use +/- at the beggining to list in ascending or descending order. Use ''.''
        for nested fields. For example, ''{field1: field2}'' may be selected with
        ''field1.field2'''
      schema:
        type: string
        format: sort
    stats_component:
      in: path
      name: component
      description: Selected component stats
      required: true
      schema:
        type: string
        enum:
        - logcollector
        - agent
    statusAgentParam:
      in: query
      name: status
      description: Filter by agent status (use commas to enter multiple statuses)
      schema:
        type: array
        items:
          type: string
          enum:
          - active
          - pending
          - never_connected
          - disconnected
        minItems: 1
    statusDeleteAgentParam:
      in: query
      name: status
      required: true
      description: Filter by agent status (use commas to enter multiple statuses)
      schema:
        type: array
        items:
          type: string
          enum:
          - all
          - active
          - pending
          - never_connected
          - disconnected
        minItems: 1
    version:
      in: query
      name: version
      description: 'Filter by agents version using one of the following formats: ''X.Y.Z'',
        ''vX.Y.Z'', ''wazuh X.Y.Z'' or ''wazuh vX.Y.Z''. For example: ''4.4.0'''
      schema:
        type: string
        format: alphanumeric
    wait_for_complete:
      in: query
      name: wait_for_complete
      description: Disable timeout response
      schema:
        type: boolean
        default: false
    node_id:
      in: path
      name: node_id
      description: Cluster node name
      required: true
      schema:
        type: string
        format: names
    node_name:
      in: query
      name: node_name
      description: Filter by node name
      schema:
        type: string
        format: names
    distinct:
      in: query
      name: distinct
      description: Look for distinct values.
      schema:
        type: boolean
        default: false
    os.name:
      in: query
      name: os.name
      description: Filter by OS name
      schema:
        type: string
        format: alphanumeric
    os.platform:
      in: query
      name: os.platform
      description: Filter by OS platform
      schema:
        type: string
        format: alphanumeric
    os.version:
      in: query
      name: os.version
      description: Filter by OS version
      schema:
        type: string
        format: alphanumeric
    older_than:
      in: query
      name: older_than
      description: Consider only agents whose last keep alive is older than the specified
        time frame. For never_connected agents, register date is considered instead
        of last keep alive. For example, `7d`, `10s` and `10` are valid values. When
        no time unit is specified, seconds are assumed. Use 0s to select all agents
      schema:
        type: string
        format: timeframe
        default: 7d
    ip:
      in: query
      name: ip
      description: Filter by the IP used by the agent to communicate with the manager.
        If it's not available, it will have the same value as registerIP
      schema:
        type: string
        format: alphanumeric
    registerIP:
      in: query
      name: registerIP
      description: Filter by the IP used when registering the agent
      schema:
        type: string
        format: alphanumeric
    group_config_status:
      in: query
      name: group_config_status
      description: Agent groups configuration sync status
      schema:
        type: string
        enum:
        - synced
        - not synced
    force_single_group:
      in: query
      name: force_single_group
      description: Removes the agent from all groups to which it belongs and assigns
        it to the specified group
      schema:
        type: boolean
    wpk_repo:
      in: query
      name: wpk_repo
      description: WPK repository
      schema:
        type: string
        format: path
    use_http:
      in: query
      name: use_http
      description: Use http protocol. If it's false use https. By default the value
        is set to false
      schema:
        type: boolean
        default: false
    upgrade_version:
      in: query
      name: upgrade_version
      description: Wazuh version to upgrade to
      schema:
        type: string
        format: wazuh_version
    force:
      in: query
      name: force
      description: Force upgrade
      schema:
        type: boolean
        default: false
    package_type:
      in: query
      name: package_type
      description: Select package type to use. By default, the manager infers this.
      schema:
        type: string
        enum:
        - rpm
        - deb
    file_path:
      in: query
      name: file_path
      description: Full path to the WPK file. The file must be on a folder on the
        Wazuh's installation directory (by default, <code>/var/ossec</code>)
      required: true
      schema:
        type: string
        format: wpk_path
    installer:
      in: query
      name: installer
      description: Installation script. Default is <code>upgrade.sh</code> or <code>upgrade.bat</code>
        for windows agents
      schema:
        type: string
        format: alphanumeric
