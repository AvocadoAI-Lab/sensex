openapi: 3.0.0
paths:
  /ciscat/{agent_id}/results:
    get:
      tags:
      - Ciscat
      summary: Get results
      description: Return the agent's ciscat results info
      operationId: api.controllers.ciscat_controller.get_agents_ciscat_results
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/ciscat:read'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      - $ref: '#/components/parameters/agent_id'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/sort'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/select'
      - $ref: '#/components/parameters/benchmark'
      - $ref: '#/components/parameters/profile'
      - $ref: '#/components/parameters/pass'
      - $ref: '#/components/parameters/fail'
      - $ref: '#/components/parameters/error'
      - $ref: '#/components/parameters/notchecked'
      - $ref: '#/components/parameters/unknown'
      - $ref: '#/components/parameters/score'
      - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: List of agents or error description
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsResponseCiscatResult'
              example:
                data:
                  affected_items:
                  - benchmark: CIS Ubuntu Linux 16.04 LTS Benchmark
                    error: 0
                    fail: 82
                    notchecked: 36
                    pass: 102
                    profile: xccdf_org.cisecurity.benchmarks_profile_Level_2_-_Server
                    scan:
                      id: 23487414
                      time: '2019-10-24T14:30:20.768Z'
                    score: 55
                    unknown: 0
                  total_affected_items: 1
                  total_failed_items: 0
                  failed_items: []
                message: All CISCAT results were returned
                error: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
components:
  schemas:
    ApiResponse:
      type: object
      properties:
        message:
          type: string
          description: Human readable description to explain the result of the request
    AllItemsResponseCiscatResult:
      allOf:
      - $ref: '#/components/schemas/AllItemsResponse'
      - type: object
        required:
        - affected_items
        properties:
          affected_items:
            type: array
            description: Items that successfully applied the API call action
            items:
              $ref: '#/components/schemas/CiscatResults'
  responses:
    ResponseError:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Bad Request
            detail: '''{invalid_param}'' is not a ''{expected_type}''. Failed validating
              ''format'' in schema[''items'']: {''description'': ''{parameter_name}'',
              ''format'': ''{expected_format}'', ''minLength'': {expected_length},
              ''type'': ''{expected_type}'', ''x-scope'': ['''', ''#/components/parameters/{parameter_name}'']}'
    PermissionDeniedResponse:
      description: Response to report a permission denied request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            title: Permission Denied
            detail: 'Permission denied: Resource type: *:*'
            remediation: Please, make sure you have permissions to execute the current
              request. For more information on how to set up permissions, please visit
              https://documentation.wazuh.com/4.9/user-manual/api/rbac/configuration.html
            error: 4000
            dapi_errors:
              unknown-node:
                error: 'Permission denied: Resource type: *:*'
    UnauthorizedResponse:
      description: Response to report an unauthorized request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Unauthorized
            detail: No authorization token provided
    InvalidHTTPMethodResponse:
      description: Response to report an invalid HTTP method
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Method Not Allowed
            detail: Specified method is invalid for this resource
    TooManyRequestsResponse:
      description: Maximum number of request per minute reached
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Wazuh Error
            detail: Maximum number of requests per minute reached
            remediation: 'This limit can be changed in api.yaml file. More information
              here: https://documentation.wazuh.com/4.9/user-manual/api/security/configuration.html'
            code: 6001
  parameters:
    agent_id:
      in: path
      name: agent_id
      description: Agent ID. All possible values from 000 onwards
      required: true
      schema:
        $ref: '#/components/schemas/AgentID'
    benchmark:
      in: query
      name: benchmark
      description: Filter by benchmark type
      schema:
        type: string
        format: alphanumeric
    error:
      in: query
      name: error
      description: Filter by encountered errors
      schema:
        type: integer
        format: int32
        minimum: 0
    fail:
      in: query
      name: fail
      description: Filter by failed checks
      schema:
        type: integer
        format: int32
        minimum: 0
    limit:
      in: query
      name: limit
      description: 'Maximum number of elements to return. Although up to 100.000 can
        be specified, it is recommended not to exceed 500 elements. Responses may
        be slower the more this number is exceeded. '
      schema:
        type: integer
        format: int32
        default: 500
        minimum: 1
        maximum: 100000
    notchecked:
      in: query
      name: notchecked
      description: Filter by not checked
      schema:
        type: integer
        format: int32
        minimum: 0
    offset:
      in: query
      name: offset
      description: First element to return in the collection
      schema:
        type: integer
        format: int32
        default: 0
        minimum: 0
    pass:
      in: query
      name: pass
      description: Filter by passed checks
      schema:
        type: integer
        format: int32
        minimum: 0
    pretty:
      in: query
      name: pretty
      description: Show results in human-readable format
      schema:
        type: boolean
        default: false
    profile:
      in: query
      name: profile
      description: Filter by evaluated profile
      schema:
        type: string
        format: alphanumeric
    query:
      in: query
      name: q
      description: Query to filter results by. For example q=&quot;status=active&quot;
      schema:
        type: string
    score:
      in: query
      name: score
      description: Filter by final score
      schema:
        type: integer
        format: int32
        minimum: 0
    search:
      in: query
      name: search
      description: Look for elements containing the specified string. To obtain a
        complementary search, use '-' at the beginning
      schema:
        type: string
        format: search
    select:
      in: query
      name: select
      description: 'Select which fields to return (separated by comma). Use ''.''
        for nested fields. For example, ''{field1: field2}'' may be selected with
        ''field1.field2'''
      schema:
        type: array
        items:
          type: string
          format: names
    sort:
      in: query
      name: sort
      description: 'Sort the collection by a field or fields (separated by comma).
        Use +/- at the beggining to list in ascending or descending order. Use ''.''
        for nested fields. For example, ''{field1: field2}'' may be selected with
        ''field1.field2'''
      schema:
        type: string
        format: sort
    unknown:
      in: query
      name: unknown
      description: Filter by unknown results
      schema:
        type: integer
        format: int32
    wait_for_complete:
      in: query
      name: wait_for_complete
      description: Disable timeout response
      schema:
        type: boolean
        default: false
