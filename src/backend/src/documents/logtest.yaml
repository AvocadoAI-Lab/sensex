openapi: 3.0.0
paths:
  /logtest:
    put:
      tags:
      - Logtest
      summary: Run logtest
      description: Run logtest tool to check if a specified log raises any alert among
        other information
      operationId: api.controllers.logtest_controller.run_logtest_tool
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/logtest:run'
      parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        description: Run logtest with the parameters below
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogtestRequest'
      responses:
        '200':
          description: Successfully run the logtest tool
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                error: 0
                data:
                  messages:
                  - 'INFO: (7202): Session initialized with token ''8cd2d6d1'''
                  token: 8cd2d6d1
                  output:
                    timestamp: 2021-05-27 12:46:03.391000+00:00
                    rule:
                      level: 2
                      description: Unknown problem somewhere in the system.
                      id: 1002
                      firedtimes: 1
                      mail: false
                      groups:
                      - syslog
                      - errors
                      gpg13:
                      - 4.3
                    agent:
                      id: '000'
                      name: wazuh-master
                    manager:
                      name: wazuh-master
                    id: '1622119563.2682664'
                    cluster:
                      name: wazuh
                      node: master-node
                    full_log: ERROR
                    decoder: None
                    location: /var/log/syslog
                  alert: false
                  codemsg: 1
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
  /logtest/sessions/{token}:
    delete:
      tags:
      - Logtest
      summary: End session
      description: Delete the saved logtest session corresponding to {token}
      operationId: api.controllers.logtest_controller.end_logtest_session
      x-rbac-actions:
      - $ref: '#/x-rbac-catalog/actions/logtest:run'
      parameters:
      - $ref: '#/components/parameters/logtest_token'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: Successfully deleted the saved session or no session found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                error: 0
                data:
                  messages:
                  - 'INFO: (7206): The session ''573ed2ca'' was closed successfully'
                  codemsg: 0
        '400':
          $ref: '#/components/responses/ResponseError'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/PermissionDeniedResponse'
        '405':
          $ref: '#/components/responses/InvalidHTTPMethodResponse'
        '406':
          $ref: '#/components/responses/WrongContentTypeResponse'
        '413':
          $ref: '#/components/responses/RequestTooLargeResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
components:
  schemas:
    ApiResponse:
      type: object
      properties:
        message:
          type: string
          description: Human readable description to explain the result of the request
    LogtestRequest:
      type: object
      required:
      - event
      - log_format
      - location
      properties:
        token:
          type: string
          description: Token for the logtest session
        log_format:
          type: string
          description: 'Allowed values: syslog, json, snort-full, squid, eventlog,
            eventchannel, audit, mysql_log, postgresql_log, nmapg, iis, command, full_command,
            djb-multilog, multi-line'
        location:
          type: string
          description: Path string
        event:
          type: string
          description: Event to look for
  responses:
    ResponseError:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Bad Request
            detail: '''{invalid_param}'' is not a ''{expected_type}''. Failed validating
              ''format'' in schema[''items'']: {''description'': ''{parameter_name}'',
              ''format'': ''{expected_format}'', ''minLength'': {expected_length},
              ''type'': ''{expected_type}'', ''x-scope'': ['''', ''#/components/parameters/{parameter_name}'']}'
    PermissionDeniedResponse:
      description: Response to report a permission denied request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          example:
            title: Permission Denied
            detail: 'Permission denied: Resource type: *:*'
            remediation: Please, make sure you have permissions to execute the current
              request. For more information on how to set up permissions, please visit
              https://documentation.wazuh.com/4.9/user-manual/api/rbac/configuration.html
            error: 4000
            dapi_errors:
              unknown-node:
                error: 'Permission denied: Resource type: *:*'
    UnauthorizedResponse:
      description: Response to report an unauthorized request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Unauthorized
            detail: No authorization token provided
    InvalidHTTPMethodResponse:
      description: Response to report an invalid HTTP method
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Method Not Allowed
            detail: Specified method is invalid for this resource
    WrongContentTypeResponse:
      description: Response to report an invalid content-type
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Wazuh Error
            detail: The body type is not the one specified in the content-type
            error: 6002
    RequestTooLargeResponse:
      description: Maximum request body size exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Request Entity Too Large
            detail: Maximum request body size 1048576 exceeded, actual body size 1225245
    TooManyRequestsResponse:
      description: Maximum number of request per minute reached
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
          example:
            title: Wazuh Error
            detail: Maximum number of requests per minute reached
            remediation: 'This limit can be changed in api.yaml file. More information
              here: https://documentation.wazuh.com/4.9/user-manual/api/security/configuration.html'
            code: 6001
  parameters:
    pretty:
      in: query
      name: pretty
      description: Show results in human-readable format
      schema:
        type: boolean
        default: false
    logtest_token:
      in: path
      name: token
      description: Token of the logtest saved session
      required: true
      schema:
        type: string
        format: alphanumeric
    wait_for_complete:
      in: query
      name: wait_for_complete
      description: Disable timeout response
      schema:
        type: boolean
        default: false
